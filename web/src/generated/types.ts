// Code generated by tygo. DO NOT EDIT.

//////////
// source: container.go

export interface Container {
	/**
	 * Short container ID
	 */
	id: string;
	/**
	 * Container name
	 */
	name: string;
	/**
	 * Container image
	 */
	image: string;
	/**
	 * Command running in the container
	 */
	command: string;
	/**
	 * Creation time
	 */
	created: string /* ISO8601 date */;
	/**
	 * Container status
	 */
	status: string;
	/**
	 * Exposed ports
	 */
	ports: string;
	/**
	 * Container size
	 */
	size?: string;
	/**
	 * Whether the container is currently running
	 */
	isRunning: boolean;
	/**
	 * CPU usage in nanoseconds
	 */
	cpuUsage: number /* float64 */;
	/**
	 * Memory usage in bytes
	 */
	memoryUsage: number /* uint64 */;
}
export interface ContainerList {
	/**
	 * List of containers
	 */
	containers: Container[];
	/**
	 * Total count of containers
	 */
	count: number /* int */;
}

//////////
// source: systemd.go

export interface SystemdService {
	/**
	 * Service name
	 */
	name: string;
	/**
	 * Service description
	 */
	description: string;
	/**
	 * Load state (e.g., "loaded", "not-found")
	 */
	loadState: string;
	/**
	 * Active state (e.g., "active", "inactive")
	 */
	activeState: string;
	/**
	 * Sub state (e.g., "running", "dead")
	 */
	subState: string;
	/**
	 * CPU usage in nanoseconds
	 */
	cpuUsage: number /* float64 */;
	/**
	 * Memory usage in bytes
	 */
	memoryUsage: number /* uint64 */;
}
export interface SystemdServiceDetails {
	service: SystemdService;
	/**
	 * Drop-in configuration paths
	 */
	dropIn: string[];
	/**
	 * Timestamp when the service was activated (RFC3339 format)
	 */
	since: string;
	/**
	 * Invocation ID
	 */
	invocation: string;
	/**
	 * Units that triggered this service
	 */
	triggeredBy: string[];
	/**
	 * Documentation URLs
	 */
	docs: string[];
	/**
	 * Main process ID
	 */
	mainPID: number /* uint32 */;
	/**
	 * Main process command
	 */
	mainProcess: string;
	/**
	 * Bytes received over IP
	 */
	ipIngressBytes: number /* uint64 */;
	/**
	 * Bytes sent over IP
	 */
	ipEgressBytes: number /* uint64 */;
	/**
	 * Bytes read from disk
	 */
	ioReadBytes: number /* uint64 */;
	/**
	 * Bytes written to disk
	 */
	ioWriteBytes: number /* uint64 */;
	/**
	 * Current number of tasks
	 */
	tasks: number /* uint32 */;
	/**
	 * Maximum number of tasks allowed
	 */
	tasksLimit: number /* uint32 */;
	/**
	 * Peak memory usage in bytes
	 */
	memoryPeak: number /* uint64 */;
	/**
	 * CPU time in nanoseconds
	 */
	cpuTimeNSec: number /* uint64 */;
	/**
	 * Control group path
	 */
	cGroup: string;
	/**
	 * Path to the unit file
	 */
	fragmentPath: string;
	/**
	 * List of processes
	 */
	processes: string[];
}
export interface SystemdServiceList {
	services: SystemdService[];
	count: number /* int */;
}
