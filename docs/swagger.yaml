basePath: /api
definitions:
  Container:
    properties:
      cpuUsage:
        description: CPU usage as percentage of a single core (can exceed 100% if
          using multiple cores)
        type: number
      id:
        description: Short container ID
        type: string
      image:
        description: Container image
        type: string
      isRunning:
        description: Whether the container is currently running
        type: boolean
      memoryUsage:
        description: Memory usage in bytes (only if running)
        type: integer
      name:
        description: Container name
        type: string
      ports:
        description: Exposed ports
        type: string
      status:
        allOf:
        - $ref: '#/definitions/ContainerStatus'
        description: Container status information
      uptime:
        description: Uptime in seconds (time since service was started)
        type: integer
    type: object
  ContainerDetails:
    properties:
      command:
        description: Command running in the container
        type: string
      container:
        allOf:
        - $ref: '#/definitions/Container'
        description: Basic container information
      created:
        description: Creation time
        type: string
      environment:
        description: Container environment variables
        items:
          type: string
        type: array
      labels:
        additionalProperties:
          type: string
        description: Container labels
        type: object
      mounts:
        description: Container mount points
        items:
          $ref: '#/definitions/Mount'
        type: array
      networks:
        additionalProperties:
          $ref: '#/definitions/NetworkConfig'
        description: Container network configurations
        type: object
      size:
        description: Container size
        type: string
    type: object
  ContainerExecRequest:
    properties:
      command:
        description: Command to execute
        type: string
    type: object
  ContainerList:
    properties:
      containers:
        description: List of containers
        items:
          $ref: '#/definitions/Container'
        type: array
      count:
        description: Total count of containers
        type: integer
    type: object
  ContainerStatus:
    properties:
      dead:
        description: Whether the container is dead
        type: boolean
      error:
        description: Error message if any
        type: string
      exitCode:
        description: Exit code if the container has exited
        type: integer
      finishedAt:
        description: When the container finished (RFC3339 format)
        type: string
      message:
        description: Human-readable status message (e.g., "Up 2 minutes", "Exited
          (0) 5 minutes ago")
        type: string
      oomKilled:
        description: Whether the container was killed due to OOM
        type: boolean
      paused:
        description: Whether the container is paused
        type: boolean
      pid:
        description: Process ID of the container
        type: integer
      restarting:
        description: Whether the container is restarting
        type: boolean
      running:
        description: Whether the container is currently running
        type: boolean
      startedAt:
        description: When the container was started (RFC3339 format)
        type: string
      state:
        description: Container state (e.g., "created", "running", "paused", "restarting",
          "removing", "exited", "dead")
        type: string
    type: object
  ErrorResponse:
    properties:
      error:
        type: string
    type: object
  Message:
    properties:
      message:
        type: string
    type: object
  Mount:
    properties:
      destination:
        description: Destination path in container
        type: string
      mode:
        description: Mount mode (ro, rw)
        type: string
      source:
        description: Source path on host
        type: string
    type: object
  NetworkConfig:
    properties:
      gateway:
        description: Network gateway
        type: string
      ipAddress:
        description: Network IP address
        type: string
      macAddress:
        description: Network MAC address
        type: string
    type: object
  SSEvent:
    properties:
      content: {}
    type: object
  SystemdService:
    properties:
      activeState:
        description: Active state (e.g., "active", "inactive")
        type: string
      cpuUsage:
        description: CPU usage as percentage of a single core (can exceed 100% if
          using multiple cores)
        type: number
      description:
        description: Service description
        type: string
      loadState:
        description: Load state (e.g., "loaded", "not-found")
        type: string
      memoryUsage:
        description: Memory usage in bytes
        type: integer
      name:
        description: Service name
        type: string
      subState:
        description: Sub state (e.g., "running", "dead")
        type: string
      uptime:
        description: Uptime in seconds (time since service was started)
        type: integer
    type: object
  SystemdServiceDetails:
    properties:
      cGroup:
        description: Control group path
        type: string
      cpuTimeNSec:
        description: CPU time in nanoseconds
        type: integer
      docs:
        description: Documentation URLs
        items:
          type: string
        type: array
      dropIn:
        description: Drop-in configuration paths
        items:
          type: string
        type: array
      fragmentPath:
        description: Path to the unit file
        type: string
      invocation:
        description: Invocation ID
        type: string
      ioReadBytes:
        description: Bytes read from disk
        type: integer
      ioWriteBytes:
        description: Bytes written to disk
        type: integer
      ipEgressBytes:
        description: Bytes sent over IP
        type: integer
      ipIngressBytes:
        description: Bytes received over IP
        type: integer
      mainPID:
        description: Main process ID
        type: integer
      mainProcess:
        description: Main process command
        type: string
      memoryPeak:
        description: Peak memory usage in bytes
        type: integer
      processes:
        description: List of processes
        items:
          type: string
        type: array
      service:
        $ref: '#/definitions/SystemdService'
      since:
        description: Timestamp when the service was activated (RFC3339 format)
        type: string
      tasks:
        description: Current number of tasks
        type: integer
      tasksLimit:
        description: Maximum number of tasks allowed
        type: integer
      triggeredBy:
        description: Units that triggered this service
        items:
          type: string
        type: array
    type: object
  SystemdServiceList:
    properties:
      count:
        type: integer
      services:
        items:
          $ref: '#/definitions/SystemdService'
        type: array
    type: object
info:
  contact: {}
  description: API for managing systemd services and containers
  title: Sirberus API
  version: "1.0"
paths:
  /container:
    get:
      description: Get a list of all containers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ContainerList'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: List containers
      tags:
      - containers
  /container/{id}:
    get:
      description: Get detailed information about a specific container
      parameters:
      - description: Container ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ContainerDetails'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get container details
      tags:
      - containers
  /container/{id}/exec:
    post:
      consumes:
      - application/json
      description: Execute a command in a container and stream the output
      parameters:
      - description: Container ID
        in: path
        name: id
        required: true
        type: string
      - description: Command to execute
        in: body
        name: command
        required: true
        schema:
          $ref: '#/definitions/ContainerExecRequest'
      produces:
      - text/event-stream
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SSEvent'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/SSEvent'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/SSEvent'
      summary: Execute command in container
      tags:
      - containers
      - sse
  /container/{id}/logs:
    get:
      description: Stream logs from a container (always includes real-time updates)
      parameters:
      - description: Container ID
        in: path
        name: id
        required: true
        type: string
      - default: 100
        description: Number of historical log lines to return before streaming new
          ones
        in: query
        name: lines
        type: integer
      produces:
      - text/event-stream
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SSEvent'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/SSEvent'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/SSEvent'
      summary: Stream container logs
      tags:
      - containers
      - sse
  /container/{id}/restart:
    post:
      description: Restart a container
      parameters:
      - description: Container ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Message'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Restart container
      tags:
      - containers
  /container/{id}/start:
    post:
      description: Start a container
      parameters:
      - description: Container ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Message'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Start container
      tags:
      - containers
  /container/{id}/stop:
    post:
      description: Stop a container
      parameters:
      - description: Container ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Message'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Stop container
      tags:
      - containers
  /systemd:
    get:
      description: Get a list of all systemd services
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SystemdServiceList'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: List systemd services
      tags:
      - systemd
  /systemd/{name}:
    get:
      description: Get detailed information about a specific systemd service
      parameters:
      - description: Service name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SystemdServiceDetails'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get systemd service details
      tags:
      - systemd
  /systemd/{name}/logs:
    get:
      description: Stream logs from a systemd service (always includes real-time updates)
      parameters:
      - description: Service name
        in: path
        name: name
        required: true
        type: string
      - default: 100
        description: Number of historical log lines to return before streaming new
          ones
        in: query
        name: lines
        type: integer
      produces:
      - text/event-stream
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SSEvent'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/SSEvent'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/SSEvent'
      summary: Stream service logs
      tags:
      - systemd
      - sse
  /systemd/{name}/restart:
    post:
      description: Restart a systemd service
      parameters:
      - description: Service name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Message'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Restart service
      tags:
      - systemd
  /systemd/{name}/start:
    post:
      description: Start a systemd service
      parameters:
      - description: Service name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Message'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Start service
      tags:
      - systemd
  /systemd/{name}/stop:
    post:
      description: Stop a systemd service
      parameters:
      - description: Service name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Message'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Stop service
      tags:
      - systemd
swagger: "2.0"
