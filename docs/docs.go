// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag/v2"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},"swagger":"2.0","info":{"description":"{{escape .Description}}","title":"{{.Title}}","contact":{},"version":"{{.Version}}"},"host":"{{.Host}}","basePath":"{{.BasePath}}","paths":{"/container":{"get":{"description":"Get a list of all containers","produces":["application/json"],"tags":["containers"],"summary":"List containers","responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ContainerList"}},"500":{"description":"Internal Server Error","schema":{"$ref":"#/definitions/ErrorResponse"}}}}},"/systemd":{"get":{"description":"Get a list of all systemd services","produces":["application/json"],"tags":["systemd"],"summary":"List systemd services","responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SystemdServiceList"}},"500":{"description":"Internal Server Error","schema":{"$ref":"#/definitions/ErrorResponse"}}}}},"/systemd/{name}":{"get":{"description":"Get detailed information about a specific systemd service","produces":["application/json"],"tags":["systemd"],"summary":"Get systemd service details","parameters":[{"type":"string","description":"Service name","name":"name","in":"path","required":true}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SystemdServiceDetails"}},"404":{"description":"Not Found","schema":{"$ref":"#/definitions/ErrorResponse"}},"500":{"description":"Internal Server Error","schema":{"$ref":"#/definitions/ErrorResponse"}}}}},"/systemd/{name}/logs":{"get":{"description":"Stream logs from a systemd service","produces":["text/event-stream"],"tags":["systemd"],"summary":"Stream service logs","parameters":[{"type":"string","description":"Service name","name":"name","in":"path","required":true},{"type":"boolean","default":true,"description":"Follow logs in real-time","name":"follow","in":"query"},{"type":"integer","default":100,"description":"Number of log lines to return","name":"lines","in":"query"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SSEvent"}},"404":{"description":"Not Found","schema":{"$ref":"#/definitions/SSEvent"}},"500":{"description":"Internal Server Error","schema":{"$ref":"#/definitions/SSEvent"}}}}},"/systemd/{name}/restart":{"post":{"description":"Restart a systemd service","produces":["application/json"],"tags":["systemd"],"summary":"Restart service","parameters":[{"type":"string","description":"Service name","name":"name","in":"path","required":true}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Message"}},"404":{"description":"Not Found","schema":{"$ref":"#/definitions/ErrorResponse"}},"500":{"description":"Internal Server Error","schema":{"$ref":"#/definitions/ErrorResponse"}}}}},"/systemd/{name}/start":{"post":{"description":"Start a systemd service","produces":["application/json"],"tags":["systemd"],"summary":"Start service","parameters":[{"type":"string","description":"Service name","name":"name","in":"path","required":true}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Message"}},"404":{"description":"Not Found","schema":{"$ref":"#/definitions/ErrorResponse"}},"500":{"description":"Internal Server Error","schema":{"$ref":"#/definitions/ErrorResponse"}}}}},"/systemd/{name}/stop":{"post":{"description":"Stop a systemd service","produces":["application/json"],"tags":["systemd"],"summary":"Stop service","parameters":[{"type":"string","description":"Service name","name":"name","in":"path","required":true}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Message"}},"404":{"description":"Not Found","schema":{"$ref":"#/definitions/ErrorResponse"}},"500":{"description":"Internal Server Error","schema":{"$ref":"#/definitions/ErrorResponse"}}}}},"/systemd/{name}/stream":{"get":{"description":"Stream real-time updates about a systemd service","produces":["text/event-stream"],"tags":["systemd"],"summary":"Stream service updates","parameters":[{"type":"string","description":"Service name","name":"name","in":"path","required":true}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SSEvent"}},"404":{"description":"Not Found","schema":{"$ref":"#/definitions/SSEvent"}},"500":{"description":"Internal Server Error","schema":{"$ref":"#/definitions/SSEvent"}}}}}},"definitions":{"Container":{"type":"object","properties":{"command":{"description":"Command running in the container","type":"string"},"cpuUsage":{"description":"CPU usage in nanoseconds","type":"number"},"created":{"description":"Creation time","type":"string"},"id":{"description":"Short container ID","type":"string"},"image":{"description":"Container image","type":"string"},"isRunning":{"description":"Whether the container is currently running","type":"boolean"},"memoryUsage":{"description":"Memory usage in bytes","type":"integer"},"name":{"description":"Container name","type":"string"},"ports":{"description":"Exposed ports","type":"string"},"size":{"description":"Container size","type":"string"},"status":{"description":"Container status","type":"string"}}},"ContainerList":{"type":"object","properties":{"containers":{"description":"List of containers","type":"array","items":{"$ref":"#/definitions/Container"}},"count":{"description":"Total count of containers","type":"integer"}}},"ErrorResponse":{"type":"object","properties":{"error":{"type":"string"}}},"Message":{"type":"object","properties":{"message":{"type":"string"}}},"SSEvent":{"type":"object","properties":{"content":{}}},"SystemdService":{"type":"object","properties":{"activeState":{"description":"Active state (e.g., \"active\", \"inactive\")","type":"string"},"cpuUsage":{"description":"CPU usage in nanoseconds","type":"number"},"description":{"description":"Service description","type":"string"},"loadState":{"description":"Load state (e.g., \"loaded\", \"not-found\")","type":"string"},"memoryUsage":{"description":"Memory usage in bytes","type":"integer"},"name":{"description":"Service name","type":"string"},"subState":{"description":"Sub state (e.g., \"running\", \"dead\")","type":"string"}}},"SystemdServiceDetails":{"type":"object","properties":{"cGroup":{"description":"Control group path","type":"string"},"cpuTimeNSec":{"description":"CPU time in nanoseconds","type":"integer"},"docs":{"description":"Documentation URLs","type":"array","items":{"type":"string"}},"dropIn":{"description":"Drop-in configuration paths","type":"array","items":{"type":"string"}},"fragmentPath":{"description":"Path to the unit file","type":"string"},"invocation":{"description":"Invocation ID","type":"string"},"ioReadBytes":{"description":"Bytes read from disk","type":"integer"},"ioWriteBytes":{"description":"Bytes written to disk","type":"integer"},"ipEgressBytes":{"description":"Bytes sent over IP","type":"integer"},"ipIngressBytes":{"description":"Bytes received over IP","type":"integer"},"mainPID":{"description":"Main process ID","type":"integer"},"mainProcess":{"description":"Main process command","type":"string"},"memoryPeak":{"description":"Peak memory usage in bytes","type":"integer"},"processes":{"description":"List of processes","type":"array","items":{"type":"string"}},"service":{"$ref":"#/definitions/SystemdService"},"since":{"description":"Timestamp when the service was activated (RFC3339 format)","type":"string"},"tasks":{"description":"Current number of tasks","type":"integer"},"tasksLimit":{"description":"Maximum number of tasks allowed","type":"integer"},"triggeredBy":{"description":"Units that triggered this service","type":"array","items":{"type":"string"}}}},"SystemdServiceList":{"type":"object","properties":{"count":{"type":"integer"},"services":{"type":"array","items":{"$ref":"#/definitions/SystemdService"}}}}}}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Sirberus API",
	Description:      "API for managing systemd services and containers",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
